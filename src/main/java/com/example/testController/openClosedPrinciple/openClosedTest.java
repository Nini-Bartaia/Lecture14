package com.example.testController.openClosedPrinciple;



// open/closed პრინციპის მაგალითად შემიძლია მოვიყვანო მობილური, და მაგალითად გვინდა
// რომ მობილურის ეკრანი დავიცვათ დაზიანებისგან ამისთვის ჩვენ არ დავშლით მობილურს ნაწილებად
// საკმარისია სპეციალური აქსესუარის გამოყენება რომ მას გადავაკრათ და დავიცვათ ეკრანი.
public class openClosedTest {


//    public String getObjectStr(Object obj, String str){
//
//        // ეს არის მაგალითი როდესაც ცალცალკე ვწერთ თითოეული კლასის მოდიფიკაციას
//        // მაგალითად რომ გვინდოდეს რაღაცის დამატება ცალცალკე უნდა დავწეროთ ან
//        // თუ ახალ ობიექტს დავამათებთ მისი შემოწმება აქაც უნდა დავამატოთ.
//        if(str.equals("test1")){
//
//            test1 test1= (test1) obj;
//            return "object is test1";
//        }
//        else if(str.equals("test2")){
//
//            test2 test2= (test2) obj;
//            return "object is test2";
//        }
//
//        return "";
//
//
//    }

    // სწორი მაგალითისთვის შეგვიძლია შემოვიტანოთ ინტერფეისი რომელიც კონკრეტულ მეთოდს შეიცავს
    // და შემდეგ ყველა კლასში დავაიმპლემენტიროთ ინტერფეისი და ოვერრაიდი გავაკეთოთ ამ მეთოდის
    // შემდეგ უკვე შეგვეძლება გამოვიძახოთ ეგ მეთოდი ყოველი კლასისთვის, რადგან უკვე ყველა კლასს
    // თავისი მოდიფიცირებული მეთოდი ექნება კონკრეტული ლოგიკისთვის, არ გვჭირდება დიდი კოდის წერა
    // და მარტივად ვახდენთ ცვლილებას.

    public String getObjectStr(test obj, String str){

        return obj.getObj();
    }

}
